{
    "entry_point": "assembly_line_balancing_problem:AssemblyLineBalancingProblem",
    "default_params": {
      "instance_file": "instances/instance_n20_1.alb"
    },
    "problem_type": "AssemblyLineBalancing",
    "description": "Minimize the number of stations in an assembly line by assigning tasks to stations such that the cycle time limit is not exceeded and precedence constraints are satisfied. The instance data is based on a SALBP formulation.",
    "keywords": ["assembly line", "balancing", "scheduling", "combinatorial", "SALBP", "optimization"],
    "data_format": {
      "instance_file": {
        "format": "The instance file begins with 3 header tokens to skip, then the number of tasks, followed by 2 tokens to skip, the cycle time limit, 5 tokens to skip, the processing times (each given as a task number and its processing time), 2 tokens to skip, and finally the precedence relations in the form 'pred,succ' until end-of-file."
      }
    },
    "decision_variables": {
      "station_assignment": {
        "type": "list of int",
        "description": "A list of length equal to the number of tasks, where each element is the 0-indexed station number assigned to that task."
      }
    },
    "objective": {
      "type": "minimization",
      "function": "Number of used stations",
      "description": "Minimize the number of stations used (i.e., the count of unique station assignments) while satisfying cycle time and precedence constraints. Infeasible solutions incur a high penalty."
    },
    "solution_representation": "A list of integers of length equal to the number of tasks, where each integer represents the assigned station (0-indexed) for that task.",
    "compatible_optimizers": [
      "genetic_algorithm",
      "simulated_annealing",
      "tabu_search",
      "particle_swarm"
    ],
    "notes": "This is a static version of the Assembly Line Balancing Problem (SALBP). The objective is to minimize the number of stations while meeting cycle time limits and task precedence constraints. Instance data is based on formulations by Alena Otto."
  }
  
